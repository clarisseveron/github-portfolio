install.packages("readxl")    # For reading Excel files
install.packages("dplyr")     # For data manipulation
install.packages("tidyr")     # For data tidying
install.packages("psych")     # For descriptive statistics
install.packages("summarytools")  # For creating table
install.packages("vctrs")
install.packages("magrittr")
install.packages("broom")
install.packages("knitr")
install.packages("car")
library(readxl)
library(dplyr)
library(tidyr)
library(psych)
library(summarytools)
library(magrittr)
library(gplots)
library(ggplot2)
library(broom)
library(knitr)
library(car)

data = read_excel("/Users/clarisse/Desktop/Econometrics/Project/Datas.xlsx")


#Transform the column Annual CO2 Emissions from a chr to a numeric format
data$`foreign_direct_invest`=as.numeric(data$`foreign_direct_invest`)
data$`Pop_largest_city`=as.numeric(data$`Pop_largest_city`)
str(data)

summary(data)

#Create a scatter plot to visualize the relationship between the predictor variable 
#(GDP per capita) and the dependent variable (CO2 emissions per capita):

ggplot(data, aes(x = GDP_capita, y = CO2_emission)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "GDP per capita (log transformed)",
       y = "CO2 emissions per capita (log transformed)",
       title = "GDP per capita vs. CO2 emissions per capita")

correlation=cor(data$GDP_capita, data$CO2_emission)
correlation

model= lm(CO2_emission ~ GDP_capita, data=data)
model



########### Table 1 :  Univariate and bivariate statistics
#Calculate the correlation matrix to assess the relationships between variables:

cor(data[, c("CO2_emission", "GDP_capita", "Renewable_energy", "foreign_direct_invest", "Pop_largest_city", "Urban_pop", "Industry")])



######## Table 2 : Results: Two Regression Models

####Perform the regression analysis

# Model 1: CO2 emissions ~ GDP per capita + Renewable energy consumption + Urban population
model1 <- lm(CO2_emission ~ GDP_capita + Renewable_energy + Urban_pop, data = data)
summary(model1)

# Model 2: CO2 emissions ~ GDP per capita + Foreign direct investment + Industry
model2 <- lm(CO2_emission ~ GDP_capita + foreign_direct_invest + Industry, data = data)
summary(model2)


# Model summary
model_summary = tidy(model1)
model_summary2 = tidy(model2)
model_summary
model_summary2



########## Differencies between years

### We create a subset of the datas for the year 2019

Emission_2019 <- subset(data, Year == 2019)

#Create Linear Regression Model for 2019:
model_2019 <- lm(CO2_emission ~ GDP_capita, data = Emission_2019) 
summary(model_2019)
#These lines fit a linear regression model to the Emission_2019 subset. 
#It predicts the "CO2_emission" based on the "GDP_capita" variable.


### We create a subset of the datas for the year 2010

Emission_2010 <- subset(data, Year == 2010)

#Create Linear Regression Model for 2010:
model_2010 <- lm(CO2_emission ~ GDP_capita, data = Emission_2010) 
summary(model_2010)


### We create a subset of the datas for the year 2000

Emission_2000 <- subset(data, Year == 2000)

#Create Linear Regression Model for 2010:
model_2000 <- lm(CO2_emission ~ GDP_capita, data = Emission_2000) 
summary(model_2000)


#relationship between "GDP_capita" (on the x-axis) and "CO2_emission" (on the y-axis) for the year 2019
ggplot(Emission_2019, aes(x = GDP_capita, y = CO2_emission)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "GDP per capita (log transformed)",
       y = "CO2 emissions per capita (log transformed)",
       title = "GDP per capita vs. CO2 emissions per capita")

#relationship between "GDP_capita" (on the x-axis) and "CO2_emission" (on the y-axis) for the year 2010
ggplot(Emission_2010, aes(x = GDP_capita, y = CO2_emission)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "GDP per capita (log transformed)",
       y = "CO2 emissions per capita (log transformed)",
       title = "GDP per capita vs. CO2 emissions per capita")

#relationship between "GDP_capita" (on the x-axis) and "CO2_emission" (on the y-axis) for the year 2000
ggplot(Emission_2000, aes(x = GDP_capita, y = CO2_emission)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "GDP per capita (log transformed)",
       y = "CO2 emissions per capita (log transformed)",
       title = "GDP per capita vs. CO2 emissions per capita")


#### Compute the differences between 2010 and 2019
diff_GDP <- Emission_2019$GDP_capita - Emission_2010$GDP_capita
diff_GDP
diff_C02 <- Emission_2019$CO2_emission - Emission_2010$CO2_emission
diff_C02

# estimate a regression using differences data
diff_mod <- lm(diff_GDP ~ diff_C02)
diff_mod

#Plotting the difference:

data_diff <- cbind.data.frame(diff_GDP,diff_C02)

ggplot(data_diff) +
  aes(x = diff_GDP, y = diff_C02) +
  geom_point(size = 1L, colour = "#0c4c8a") +
  geom_smooth(method = "lm",  formula = y ~ x, se = F, col="red") +
  labs(x = "Change in GDP (in 2019 dollars)", y = "Change in CO2 emission") +
  theme_linedraw() + 
  theme(text = element_text(size=20))

#This plot calculates the differences between 2019 and 2010 values and performs a regression analysis on the differences.


#### compute the differences between 2010 and 2000
diff_GDP2 <- Emission_2010$GDP_capita - Emission_2000$GDP_capita
diff_GDP2
diff_C022 <- Emission_2010$CO2_emission - Emission_2000$CO2_emission
diff_C022

# estimate a regression using differences data
diff_mod2 <- lm(diff_GDP2 ~ diff_C022)
diff_mod2

#Plotting the difference:

data_diff2 <- cbind.data.frame(diff_GDP2,diff_C022)

ggplot(data_diff2) +
  aes(x = diff_GDP2, y = diff_C022) +
  geom_point(size = 1L, colour = "#0c4c8a") +
  geom_smooth(method = "lm",  formula = y ~ x, se = F, col="red") +
  labs(x = "Change in GDP (in 2010 dollars)", y = "Change in CO2 emission") +
  theme_linedraw() + 
  theme(text = element_text(size=20))

#This plot calculates the differences between 2010 and 2000 values and performs a regression analysis on the differences.




